version: "2.2"
services:
  # https://www.elastic.co/guide/en/apm/server/current/running-on-docker.html
  apm-server:
    #image: docker.elastic.co/apm/apm-server:6.2.3
    build:
        context: ./apm/
    container_name: apm-server
    ports:
      - 8200:8200
    networks:
      - apm-net
    volumes:
      - "./apm-server.yml:/usr/share/apm-server/apm-server.yml"
    depends_on:
      elasticsearch:
        condition: service_healthy
    command: --strict.perms=false -e  # Avoid the error: "apm-server.yml" can only be writable by the owner.

  # https://www.elastic.co/guide/en/kibana/current/_configuring_kibana_on_docker.html
  kibana:
    image: docker.elastic.co/kibana/kibana:7.0.0
    container_name: apm-kibana
    ports:
      - 5601:5601
    networks:
      - apm-net
    volumes:
      - "./kibana.yml:/usr/share/kibana/config/kibana.yml"
    depends_on:
      elasticsearch:
        condition: service_healthy

  # https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.0.0
    container_name: apm-es
    environment:
      - "ELASTIC_PASSWORD=changeme"
      - "http.host=0.0.0.0"
      - "transport.host=127.0.0.1"
    ports:
      - 9200:9200
    networks:
      - apm-net
    volumes:
      - "esdata:/usr/share/elasticsearch/data"
    healthcheck:
      test: ['CMD', 'curl', '-f', '-u', 'elastic:changeme', 'http://localhost:9200']

# Grafana
  grafana:
    image: grafana/grafana
    user: "104"
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - ./grafana/data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    networks:
      - apm-net
    restart: always
    depends_on:
      - prometheus

  # Prometheus
  prometheus:
    image: prom/prometheus:v2.1.0
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - ./prometheus/config:/etc/prometheus/
      - ./prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    networks:
      - apm-net
  
  # APP
  scraperapp:
    build:
        context: ../../.
    environment:
      - DATABASE_URL=mysql+pymysql://root:@mysql:3306/crawler?charset=utf8mb4
      - CLIENT_KEY=[CREDENCIAL_AQUI]
      - CLIENT_SECRET=[CREDENCIAL_AQUI]
      - APM_URL=http://apm-server:8200
    ports:
      - 5000:5000
    networks:
      - apm-net
    depends_on:
      - mysql
      # - apm-server

  # Mysql
  mysql:
    image: mysql/mysql-server
    volumes: 
      - ./dump.sql:/docker-entrypoint-initdb.d/datadump.sql
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=1
      - MYSQL_ROOT_HOST=%
    ports:
      - 3306:3306
    networks:
      - apm-net

volumes:
  esdata:
    driver: local

networks:
  apm-net:
